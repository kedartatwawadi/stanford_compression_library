Search.setIndex({docnames:["compressors/baseline_compressors","compressors/huffman_coder","compressors/integer_coders","compressors/modules","compressors/prefix_free_compressors","core/data_block","core/data_encoder_decoder","core/data_stream","core/encoded_stream","core/modules","core/prob_dist","index","utils/bitarray_utils","utils/modules","utils/test_utils","utils/tree_utils"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":4,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":3,"sphinx.domains.rst":2,"sphinx.domains.std":2,sphinx:56},filenames:["compressors/baseline_compressors.rst","compressors/huffman_coder.rst","compressors/integer_coders.rst","compressors/modules.rst","compressors/prefix_free_compressors.rst","core/data_block.rst","core/data_encoder_decoder.rst","core/data_stream.rst","core/encoded_stream.rst","core/modules.rst","core/prob_dist.rst","index.rst","utils/bitarray_utils.rst","utils/modules.rst","utils/test_utils.rst","utils/tree_utils.rst"],objects:{"":[[0,0,0,"-","baseline_compressors"],[12,0,0,"-","bitarray_utils"],[5,0,0,"-","data_block"],[6,0,0,"-","data_encoder_decoder"],[7,0,0,"-","data_stream"],[8,0,0,"-","encoded_stream"],[1,0,0,"-","huffman_coder"],[2,0,0,"-","integer_coders"],[4,0,0,"-","prefix_free_compressors"],[10,0,0,"-","prob_dist"],[14,0,0,"-","test_utils"],[15,0,0,"-","tree_utils"]],"baseline_compressors.AlphabetDecoder":[[0,2,1,"","decode_block"]],"baseline_compressors.AlphabetEncoder":[[0,2,1,"","encode_block"]],"baseline_compressors.FixedBitwidthDecoder":[[0,2,1,"","decode_block"]],"baseline_compressors.FixedBitwidthEncoder":[[0,2,1,"","encode_block"]],"data_block.DataBlock":[[5,2,1,"","get_alphabet"],[5,2,1,"","get_counts"],[5,2,1,"","get_empirical_distribution"],[5,2,1,"","get_entropy"],[5,4,1,"","size"]],"data_encoder_decoder.DataDecoder":[[6,2,1,"","decode"],[6,2,1,"","decode_block"],[6,2,1,"","decode_file"],[6,2,1,"","reset"]],"data_encoder_decoder.DataEncoder":[[6,2,1,"","encode"],[6,2,1,"","encode_block"],[6,2,1,"","encode_file"],[6,2,1,"","reset"]],"data_stream.DataStream":[[7,2,1,"","get_block"],[7,2,1,"","get_symbol"],[7,2,1,"","seek"],[7,2,1,"","write_block"],[7,2,1,"","write_symbol"]],"data_stream.FileDataStream":[[7,2,1,"","seek"]],"data_stream.ListDataStream":[[7,2,1,"","get_symbol"],[7,2,1,"","seek"],[7,2,1,"","write_symbol"]],"data_stream.TextFileDataStream":[[7,2,1,"","get_symbol"],[7,2,1,"","write_symbol"]],"encoded_stream.EncodedBlockReader":[[8,2,1,"","get_block"]],"encoded_stream.EncodedBlockWriter":[[8,2,1,"","write_block"]],"encoded_stream.HeaderHandler":[[8,5,1,"","MAX_PAYLOAD_SIZE"],[8,5,1,"","NUM_HEADER_BITS"],[8,5,1,"","NUM_HEADER_BYTES"],[8,2,1,"","add_header"],[8,2,1,"","get_payload_size"]],"encoded_stream.Padder":[[8,5,1,"","NUM_PAD_BITS"],[8,2,1,"","add_byte_padding"],[8,2,1,"","remove_byte_padding"]],"huffman_coder.HuffmanNode":[[1,5,1,"","prob"]],"huffman_coder.HuffmanTree":[[1,2,1,"","build_tree"]],"integer_coders.UniversalUintDecoder":[[2,2,1,"","decode_block"],[2,2,1,"","decode_symbol"]],"integer_coders.UniversalUintEncoder":[[2,2,1,"","encode_block"],[2,2,1,"","encode_symbol"]],"prefix_free_compressors.PrefixFreeTree":[[4,2,1,"","build_tree"],[4,2,1,"","get_encoding_table"],[4,2,1,"","print_tree"]],"prefix_free_compressors.PrefixFreeTreeDecoder":[[4,2,1,"","decode_block"],[4,2,1,"","decode_symbol"]],"prefix_free_compressors.PrefixFreeTreeEncoder":[[4,2,1,"","encode_block"],[4,2,1,"","encode_symbol"]],"prefix_free_compressors.PrefixFreeTreeNode":[[4,5,1,"","code"],[4,2,1,"","get_encoding_table"]],"prob_dist.ProbabilityDist":[[10,4,1,"","alphabet"],[10,4,1,"","entropy"],[10,4,1,"","prob_list"],[10,2,1,"","probability"],[10,4,1,"","size"]],"prob_dist.ProbabilityDistTest":[[10,2,1,"","test_creation_entropy"],[10,2,1,"","test_validation_failure"]],"tree_utils.BinaryNode":[[15,5,1,"","id"],[15,4,1,"","is_leaf_node"],[15,5,1,"","left_child"],[15,2,1,"","print_node"],[15,5,1,"","right_child"]],baseline_compressors:[[0,1,1,"","AlphabetDecoder"],[0,1,1,"","AlphabetEncoder"],[0,1,1,"","FixedBitwidthDecoder"],[0,1,1,"","FixedBitwidthEncoder"],[0,3,1,"","test_alphabet_encode_decode"],[0,3,1,"","test_fixed_bitwidth_encode_decode"],[0,3,1,"","test_fixed_bitwidth_file_encode_decode"]],bitarray_utils:[[12,3,1,"","bitarray_to_uint"],[12,3,1,"","get_bit_width"],[12,3,1,"","test_bitarray_to_int"],[12,3,1,"","uint_to_bitarray"]],data_block:[[5,1,1,"","DataBlock"],[5,3,1,"","test_data_block_basic_ops"]],data_encoder_decoder:[[6,1,1,"","DataDecoder"],[6,1,1,"","DataEncoder"]],data_stream:[[7,1,1,"","DataStream"],[7,1,1,"","FileDataStream"],[7,1,1,"","ListDataStream"],[7,1,1,"","TextFileDataStream"],[7,1,1,"","Uint8FileDataStream"],[7,3,1,"","test_file_data_stream"],[7,3,1,"","test_list_data_stream"]],encoded_stream:[[8,1,1,"","EncodedBlockReader"],[8,1,1,"","EncodedBlockWriter"],[8,1,1,"","HeaderHandler"],[8,1,1,"","Padder"],[8,3,1,"","test_encoded_block_reader_writer"],[8,3,1,"","test_header"],[8,3,1,"","test_padder"]],huffman_coder:[[1,1,1,"","HuffmanDecoder"],[1,1,1,"","HuffmanEncoder"],[1,1,1,"","HuffmanNode"],[1,1,1,"","HuffmanTree"],[1,3,1,"","test_huffman_coding_dyadic"]],integer_coders:[[2,1,1,"","UniversalUintDecoder"],[2,1,1,"","UniversalUintEncoder"],[2,3,1,"","test_universal_uint_encode_decode"]],prefix_free_compressors:[[4,1,1,"","PrefixFreeTree"],[4,1,1,"","PrefixFreeTreeDecoder"],[4,1,1,"","PrefixFreeTreeEncoder"],[4,1,1,"","PrefixFreeTreeNode"]],prob_dist:[[10,1,1,"","ProbabilityDist"],[10,1,1,"","ProbabilityDistTest"]],test_utils:[[14,3,1,"","are_blocks_equal"],[14,3,1,"","create_random_text_file"],[14,3,1,"","get_random_data_block"],[14,3,1,"","try_file_lossless_compression"],[14,3,1,"","try_lossless_compression"]],tree_utils:[[15,1,1,"","BinaryNode"]]},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","method","Python method"],"3":["py","function","Python function"],"4":["py","property","Python property"],"5":["py","attribute","Python attribute"]},objtypes:{"0":"py:module","1":"py:class","2":"py:method","3":"py:function","4":"py:property","5":"py:attribute"},terms:{"0":[2,4,5,8],"1":[0,1,2,5],"100":2,"1000":14,"10000":6,"101":2,"11010":2,"11011":2,"1110":2,"1110100":2,"2":[1,2],"25":5,"3":[1,2,8],"32":8,"33":5,"4":[2,8],"4294967296":8,"7":8,"75":5,"8":0,"abstract":[0,2,4,6,7],"byte":8,"case":[7,10],"class":[0,1,2,4,5,6,7,8,10,15],"default":[5,7],"do":7,"final":6,"float":1,"function":[0,2,4,5,6,7,14,15],"int":[0,2,5,6,7,12,14],"return":[0,2,5,6,7,8,14,15],"static":[1,4],"true":14,"try":14,A:[5,15],If:5,In:7,It:7,On:1,The:[0,4,5,6,7,8,14],These:7,To:8,__enter__:7,__exit__:7,aa:5,ab:5,abc:[6,7],about:8,access:6,accordingli:12,account:8,act:7,ad:8,add:[1,4,8],add_byte_pad:8,add_head:8,algorithm:4,align:8,all:[6,8],allow:[4,8],alphabet:[0,5,10],alphabetdecod:0,alphabetencod:0,alreadi:1,although:4,an:[4,7,8,12],ani:[1,4,6,7,15],anyth:7,anywai:0,appropri:[0,2,6,7],aprs:6,ar:[5,6,7,8,10,14],are_blocks_equ:14,arg:8,around:[5,6,7,10],ascii:0,assert:8,assum:6,attribut:4,b:[5,15],ba:5,back:8,base:[0,1,2,4,5,6,7,8,10,15],baselin:0,baseline_compressor:[3,11],basic:5,befor:[7,8],begin:7,behavior:6,binari:[6,8],binarynod:[4,15],bit:[0,2,4,6,8,12],bit_arrai:12,bit_width:12,bitarrai:[0,1,2,4,6,8,12],bitarray_to_uint:12,bitarray_util:[11,13],block:[0,1,2,6,7,8,14],block_siz:[6,7],bool:14,both:7,build:1,build_tre:[1,4],c:15,call:6,can:[0,2,6,7,8],care:8,certain:6,charact:7,check:[0,5,7,10,14],choos:6,chop:6,classmethod:8,close:7,code:[1,4],coder:1,combin:1,common:6,commun:8,compress:[0,5,8,14],compressor:[0,1,6,11],comput:8,concaten:6,consist:6,construct:1,contain:[0,2,6,8],continu:1,convers:[7,12],convert:[7,12],core:[0,1,2,4,5,6,7,11,14],correcpond:8,correctli:7,correspond:[0,4],count:5,coupl:1,creat:[0,7,8,14],create_random_text_fil:14,creation:10,current_ind:7,d:[14,15],data:[0,1,2,5,6,7,8,12,14],data_block:[0,2,4,6,7,8,9,11,14],data_block_1:14,data_block_2:14,data_compressor:14,data_encoder_decod:[0,2,4,9,11,14],data_list:5,data_stream:[6,9,11],datablock:[0,2,4,5,6,7,14],datadecod:[0,2,4,6,14],dataencod:[0,2,4,6,14],datastream:[6,7],decod:[0,1,2,4,5,6,8,14],decode_block:[0,2,4,6],decode_fil:6,decode_symbol:[2,4],decoded_block:[0,2,6],defin:[6,7],descript:7,detail:7,dict:[5,10],dictionari:5,differ:8,differen:6,distribut:[1,5,10,14],docstr:[6,8],doe:[4,7,8],don:0,due:4,dummi:8,dyadic:1,e:5,each:[0,4,6,8],easier:6,effici:2,eg:7,elementari:0,els:4,empir:5,empirical_distribut:5,en:5,enc_block1:8,enc_block2:8,enc_block:8,encod:[0,1,2,4,5,6,8,14],encode_block:[0,2,4,6],encode_block_s:14,encode_fil:6,encode_read:6,encode_symbol:[2,4],encode_writ:6,encoded_bitarrai:[0,2,4,6,8],encoded_block:[6,8],encoded_file_path:6,encoded_stream:[6,9,11],encodedblockread:[6,8],encodedblockwrit:[6,8],encodr:14,end:[7,8],entropi:[1,5,10],entropy_:5,epir:5,equal:[1,14],essenti:8,exampl:6,extract:7,facilit:7,fail:10,fals:14,field:[1,4],file:[0,6,7,8,14],file_path:[7,8,14],file_s:14,filedatastream:7,finish:7,first:[0,8],fix:[0,8],fixedbitwidthdecod:0,fixedbitwidthencod:0,fixm:[4,7],follow:8,format:7,free:4,from:[0,2,4,5,6,7,8,14,15],full:0,g:5,gener:[1,5,7,14],get:[4,5,7],get_alphabet:5,get_bit_width:12,get_block:[7,8],get_count:5,get_empirical_distribut:5,get_encoding_t:4,get_entropi:5,get_payload_s:8,get_random_data_block:14,get_symbol:7,give:6,given:[1,2,5,6,7,14,15],go:4,ha:1,handl:[6,7,8],have:[4,7,8],header:8,header_byt:8,headerhandl:8,henc:7,here:1,how:[0,2,6],http:5,huffman:1,huffman_cod:[3,11],huffmandecod:1,huffmanencod:1,huffmannod:1,huffmantre:1,i:14,id:[1,4,15],imepl:[6,7],imeplemnt:6,immplement:7,impel:6,implement:[0,2,4,5,6,7],impli:0,includ:8,incorrect:10,index:11,infer:8,info:6,inform:8,information_theori:5,init:10,input:[0,2,5,6,7,8,14],input_file_path:[6,14],input_list:7,integer_cod:[3,11],interfac:[7,8],intern:15,is_leaf_nod:15,itself:8,just:[6,8],k:5,last:1,leaf:4,left:[1,4],left_child:[1,4,15],length:8,let:8,line:15,list:[5,7],listdatastream:7,lookup:4,loop:4,lossless:[0,14],lot:6,mainli:[0,2,6,7],make:[4,6],mani:[0,2,6],map:4,max:7,max_payload_s:8,mer:5,method:[2,6,7],methodnam:10,might:7,modul:[3,9,11,13],more:[0,1,2,6,7,8],most:[2,6],multipl:6,natur:4,need:[0,2,4,5,6,7,8,14],next:[4,7,8],node:[1,4,15],none:[1,4,7,10,12,14,15],note:[1,2,6],notimplementederror:5,num_bits_consum:[0,2,6],num_header_bit:8,num_header_byt:8,num_pad_bit:8,number:[0,7,15],numer:6,obj:7,objct:14,object:[4,5,6,7,8,10,14,15],obtain:5,onc:4,one:[0,2,6],onli:[0,2,6],open:7,oper:[5,6],option:[1,4,5,14],order:5,org:5,other:6,out:6,output:[4,5,6,14],output_file_path:6,output_stream:6,over:4,overwrit:6,pad:8,padder:8,page:11,param:6,paramet:[0,2,5,6,7,8,14],params_data_bitarrai:0,pars:4,particular:7,pass:10,path:[6,14],payload:8,payload_bitarrai:8,payload_pad_bitarrai:8,perfectli:1,perform:0,permiss:7,plan:0,po:7,posit:7,practic:7,prefix:4,prefix_free_compressor:[1,3,11],prefixfreenod:1,prefixfreetre:[1,4],prefixfreetreedecod:[1,4],prefixfreetreeencod:[1,4],prefixfreetreenod:[1,4],print:15,print_nod:15,print_tre:4,prob:[1,14],prob_dict:10,prob_dist:[1,4,5,9,11,14],prob_list:10,probabilitydist:[1,4,5,10,14],probabilitydisttest:10,probabl:[10,14],procedur:8,process:8,properti:[5,10,15],provid:[8,12],quit:4,r:7,rais:5,random:14,randomli:1,re:6,reach:[4,7],read:[6,7,8],reader:8,realli:4,recurs:15,remain:7,remov:8,remove_byte_pad:8,repres:[1,5,7,8],reset:[6,7],respect:[6,8],retriev:[0,6,8],revers:12,right:4,right_child:[1,4,15],root:4,runtest:10,s:[4,7],sai:8,same:8,sampl:0,scl:8,search:11,see:7,seed:14,seek:7,self:[5,6,7],set:[0,5,7],shorter:7,should:1,simpl:[4,7,12],singl:1,size:[0,5,6,7,8,10,12,14],smaller:7,so:[7,8],some:[0,5,8],sort:1,special:7,specif:4,specifi:6,standpoint:7,start:4,state:6,still:2,str:[1,4,6,7,8,14],stream:[4,6,7,8],structur:8,sub:7,subclass:[0,1,2,4,6,7],sublass:4,support:6,sure:4,symbol:[0,1,4,5,7],t:0,tabl:4,take:8,technic:0,test:[0,1,7,8,10,12,14],test_alphabet_encode_decod:0,test_bitarray_to_int:12,test_creation_entropi:10,test_data_block_basic_op:5,test_encoded_block_reader_writ:8,test_file_data_stream:7,test_fixed_bitwidth_encode_decod:0,test_fixed_bitwidth_file_encode_decod:0,test_head:8,test_huffman_coding_dyad:1,test_list_data_stream:7,test_padd:8,test_universal_uint_encode_decod:2,test_util:[11,13],test_validation_failur:10,testcas:10,text:[6,7,14],textdatastream:7,textfiledatastream:[6,7],than:[0,2,6],thei:6,thi:[0,2,6,7],thing:8,through:4,time:6,top:7,tree:[1,4,15],tree_util:[4,11,13],tri:7,try_file_lossless_compress:14,try_lossless_compress:14,tupl:[5,14],two:[1,7,8],type:[0,2,5,6,7,8],typic:5,uint8:7,uint8filedatastream:7,uint:12,uint_to_bitarrai:12,uniqu:5,unittest:10,univers:2,universaluintdecod:2,universaluintencod:2,unsign:12,until:1,us:[0,1,2,4,5,6,7,8,14,15],usnig:0,usual:7,util:[4,5,6,11,14],valid:10,valu:0,variabl:8,verifi:12,wa:[0,14],we:[0,1,4,7,8],were:[0,2,6],where:8,which:[5,6,7,14],width:0,wiki:5,wikipedia:5,work:12,would:7,wrapper:[5,6,7,10],write:[6,7,8],write_block:[7,8],write_symbol:7,writer:[6,8],written:[6,7,8,14],x:[2,12],yet:5,you:[4,7]},titles:["baseline_compressors module","huffman_coder module","integer_coders module","compressors","prefix_free_compressors module","data_block module","data_encoder_decoder module","data_stream module","encoded_stream module","core","prob_dist module","Welcome to Stanford Compression Library\u2019s documentation!","bitarray_utils module","utils","test_utils module","tree_utils module"],titleterms:{baseline_compressor:0,bitarray_util:12,compress:11,compressor:3,content:11,core:9,data_block:5,data_encoder_decod:6,data_stream:7,document:11,encoded_stream:8,huffman_cod:1,indic:11,integer_cod:2,librari:11,modul:[0,1,2,4,5,6,7,8,10,12,14,15],prefix_free_compressor:4,prob_dist:10,s:11,stanford:11,tabl:11,test_util:14,tree_util:15,util:13,welcom:11}})